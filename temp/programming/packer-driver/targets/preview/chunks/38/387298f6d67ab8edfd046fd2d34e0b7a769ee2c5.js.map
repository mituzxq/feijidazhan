{"version":3,"sources":["file:///C:/Users/zxq/Desktop/%E9%A3%9E%E6%9C%BA%E5%A4%A7%E6%88%98/NewProject/assets/Missile.ts"],"names":["_decorator","Component","Vec2","ccclass","property","Missile","targetPos","angleSpeed","moveSpeed","moveLimit","stepAngle","setTargetPos","xPos","yPos","x","y","reset","start","update","deltaTime","rotation","missile","node","position","enemy","parent","getChildByName","Math","sqrt","pow","targetRadian","atan2","targetAngle","PI","curAngle","angle","distAngle","abs","nextRadian","nodeX","nodeY","cos","sin","setPosition","die","destroy"],"mappings":"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","sourcesContent":["import { _decorator, Component, v3, Vec2 } from 'cc';\nconst { ccclass, property } = _decorator;\n\n@ccclass('Missile')\nexport class Missile extends Component {\n    /**目标地点 */\n    public targetPos: Vec2 = new Vec2();\n    /**角速度 */\n    public angleSpeed: number = 5;\n    /**移动速度 */\n    public moveSpeed: number = 5;\n\n    /**移动限制距离，相距目的地距离>moveLimit时才会移动，防止抖动 */\n    private moveLimit: number = 20;\n    /**每帧变化的角度 */\n    private stepAngle: number = null;\n\n    public setTargetPos(xPos: number, yPos: number) {\n        this.targetPos.x = xPos;\n        this.targetPos.y = yPos;\n        this.stepAngle = null;\n    }\n\n    /**重置 */\n    public reset() {\n        this.stepAngle = null;\n    }\n    start() {\n\n    }\n\n    update(deltaTime: number) {\n        this.rotation();\n    }\n    //旋转\n    rotation() {\n        let missile = this.node.position;\n        let enemy = this.node.parent.getChildByName(\"enemy\").position;\n        if (Math.sqrt(Math.pow(missile.x - enemy.x, 2) + Math.pow(missile.y - enemy.y, 2)) > this.moveLimit) {\n            let targetRadian = Math.atan2(this.targetPos.y - enemy.y, this.targetPos.x - enemy.x);\n            let targetAngle = targetRadian * 180 / Math.PI;\n            //导弹当前角度\n            let curAngle = this.node.angle;\n            //导弹当前角度和导弹最终指向角度的差\n            let distAngle = targetAngle - curAngle;\n            //导弹转动的角速度，根据角度差来判断顺时针或逆时针。( stepAngle=null时才会计算旋转角度，为了防止导弹出现在边界值附近左右摇摆的问题，一旦确定旋转角度方向，则不再改变)\n            if (this.stepAngle == null) {\n                this.stepAngle = distAngle > 0 ? this.angleSpeed : -this.angleSpeed;\n            }\n            //临界值判断 (Math.atan2会在边界值位置直接从180变成-180，或-180变成180，导致永远到不了目标角度)\n            if (Math.abs((curAngle + 360) % 360 - (targetAngle + 360) % 360) > (Math.abs(this.stepAngle) + 1)) {\n                //角度未达到临近值才会++，防止抖动\n                if (Math.abs(this.node.angle - targetAngle) > (Math.abs(this.stepAngle) + 1)) {\n                    this.node.angle += this.stepAngle;\n                }\n            }\n            //移动\n            let nextRadian = this.node.angle * Math.PI / 180;\n            let nodeX = this.node.position.x;\n            let nodeY = this.node.position.y;\n            nodeX += Math.cos(nextRadian) * this.moveSpeed;\n            nodeY += Math.sin(nextRadian) * this.moveSpeed;\n            this.node.setPosition(nodeX, nodeY);\n        }\n    }\n    die() {\n        this.node.destroy();\n    }\n}\n\n"]}