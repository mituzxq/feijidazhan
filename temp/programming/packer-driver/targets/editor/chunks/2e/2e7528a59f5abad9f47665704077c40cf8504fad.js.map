{"version":3,"sources":["file:///C:/Users/zxq/Desktop/%E9%A3%9E%E6%9C%BA%E5%A4%A7%E6%88%98/NewProject/assets/BeginScript/daodan.ts"],"names":["_decorator","Component","Vec2","ccclass","property","daodan","targetPos","angleSpeed","moveSpeed","moveLimit","stepAngle","setTargetPos","xPos","yPos","x","y","reset","update","Math","sqrt","pow","node","position","targetRadian","atan2","targetAngle","PI","curAngle","angle","distAngle","abs","nextRadian","nodeX","nodeY","cos","sin","setPosition"],"mappings":"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","sourcesContent":["import { _decorator, Component, Node, Vec2 } from 'cc';\nconst { ccclass, property } = _decorator;\n\n@ccclass('daodan')\nexport class daodan extends Component {\n\n    /**目标地点 */\n    public targetPos: Vec2 = new Vec2();\n    /**角速度 */\n    public angleSpeed: number = 5;\n    /**移动速度 */\n    public moveSpeed: number = 5;\n\n    /**移动限制距离，相距目的地距离>moveLimit时才会移动，防止抖动 */\n    private moveLimit: number = 20;\n    /**每帧变化的角度 */\n    private stepAngle: number = null;\n\n    /**\n     * 设置目标点\n     * @param xPos x坐标\n     * @param yPos y坐标\n     */\n    public setTargetPos(xPos: number, yPos: number) {\n        this.targetPos.x = xPos;\n        this.targetPos.y = yPos;\n        this.stepAngle = null;\n    }\n\n    /**重置 */\n    public reset() {\n        this.stepAngle = null;\n    }\n\n    update() {\n        //距离目的地一定距离才会移动，防止抖动\n        if (Math.sqrt(Math.pow(this.node.position.x - this.targetPos.x, 2) + Math.pow(this.node.position.y - this.targetPos.y, 2)) > this.moveLimit) {\n            //导弹和目标点之间弧度、角度 \n            let targetRadian = Math.atan2(this.targetPos.y - this.node.position.y, this.targetPos.x - this.node.position.x);\n            let targetAngle = targetRadian * 180 / Math.PI;\n            //导弹当前角度\n            let curAngle = this.node.angle;\n            //导弹当前角度和导弹最终指向角度的差\n            let distAngle = targetAngle - curAngle;\n            //导弹转动的角速度，根据角度差来判断顺时针或逆时针。( stepAngle=null时才会计算旋转角度，为了防止导弹出现在边界值附近左右摇摆的问题，一旦确定旋转角度方向，则不再改变)\n            if (this.stepAngle == null) {\n                this.stepAngle = distAngle > 0 ? this.angleSpeed : -this.angleSpeed;\n            }\n            //临界值判断 (Math.atan2会在边界值位置直接从180变成-180，或-180变成180，导致永远到不了目标角度)\n            if (Math.abs((curAngle + 360) % 360 - (targetAngle + 360) % 360) > (Math.abs(this.stepAngle) + 1)) {\n                //角度未达到临近值才会++，防止抖动\n                if (Math.abs(this.node.angle - targetAngle) > (Math.abs(this.stepAngle) + 1)) {\n                    this.node.angle += this.stepAngle;\n                }\n            }\n            //移动\n            let nextRadian = this.node.angle * Math.PI / 180;\n            let nodeX = this.node.position.x;\n            let nodeY = this.node.position.x;\n            nodeX += Math.cos(nextRadian) * this.moveSpeed;\n            nodeY += Math.sin(nextRadian) * this.moveSpeed;\n            this.node.setPosition(nodeX, nodeY);\n        }\n    }\n}\n\n"]}